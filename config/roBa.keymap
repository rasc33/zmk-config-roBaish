#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
            slow-release;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11 11 12>;
            slow-release;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        colon_semicolon: colon_semicolon {
            compatible = "zmk,behavior-tap-dance";
            label = "COLON_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_Mac {
            bindings = <
&kp Q             &kp W         &kp E             &kp R            &kp T                                               &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D             &kp F            &kp G        &kp ESC                 &kp MINUS      &kp H        &kp J  &lt 5 K    &kp L    &mt RIGHT_CONTROL SQT
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V            &kp B        &colon_semicolon        &kp TILDE      &kp N        &kp M  &kp COMMA  &kp DOT  &lt 3 SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 3 LC(SPACE)  &lt 2 SPACE  &lt 5 LC(UP_ARROW)      &kp BACKSPACE  &lt 1 ENTER                             &lt 6 BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNC_NUM {
            bindings = <
&trans  &kp F7  &kp F8  &kp F9  &trans                        &kp EQUAL     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&trans  &kp F4  &kp F5  &kp F6  &trans   &kp F11      &trans  &kp DOT       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&trans  &kp F1  &kp F2  &kp F3  &kp F10  &kp F12      &trans  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK
&trans  &trans  &trans  &trans  &trans   &trans       &trans  &trans                                                  &kp SLASH
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION   &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT                         &kp CARET        &kp ASTRK          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp LEFT_CONTROL  &trans  &trans    &trans      &trans       &trans      &trans     &kp EXCLAMATION  &kp AT_SIGN        &kp HASH              &kp LEFT_BRACKET       &kp RIGHT_BRACKET
&kp LEFT_SHIFT    &trans  &trans    &trans      &trans       &trans      &kp COMMA  &kp DOT          &kp RIGHT_BRACKET  &kp LESS_THAN         &kp GREATER_THAN       &kp QUESTION
&trans            &trans  &trans    &trans      &trans       &trans      &kp DEL    &trans                                                                           &kp BACKSLASH
            >;
        };

        Move {
            bindings = <
&kp LA(TAB)       &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                        &trans  &trans          &trans          &trans           &trans
&kp LEFT_CONTROL  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans   &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp LEFT_SHIFT    &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans   &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp RIGHT_SHIFT
&trans            &trans                  &trans          &trans                   &trans   &trans      &kp DEL  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans  &trans    &mkp MB3  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB4  &trans  &mkp MB1  &trans    &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB5  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB4  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &mkp MB5  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans    &trans                          &trans
            >;
        };

        BT_SETTING {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &sys_reset       &sys_reset   &trans          &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &bootloader      &bootloader  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans
&trans  &trans        &trans        &mo 0         &mo 0   &trans           &trans       &trans                                                    &trans
            >;
        };
    };
};
